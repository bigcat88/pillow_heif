[build-system]
requires = [
    "setuptools>=42",
    "wheel",
]
# build-backend = "setuptools.build_meta"

[tool.coverage.run]
cover_pylib = true
include = ["*/pillow_heif/*"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "DeprecationWarning",
    "DEPRECATED"
]

[tool.black]
line-length = 120
target-versions = ["py37"]
preview = true

[tool.isort]
profile = "black"

[tool.pylint]
master.py-version = "3.7"
master.extension-pkg-allow-list = ["_pillow_heif"]
design.max-attributes = 8
design.max-branches = 14
design.max-locals = 16
design.max-returns = 8
basic.good-names = [
    "a", "b", "c", "d", "e", "f", "i", "j", "k", "v",
    "ex", "_", "fp", "im", "HeifImagePlugin", "AvifImagePlugin",
]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
    "missing-class-docstring",
    "missing-function-docstring",
    "line-too-long",
]

[tool.mypy]
ignore_missing_imports = true
warn_no_return = true
strict_optional = true

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.cibuildwheel]
build-verbosity = "2"
skip = ["cp36-*", "pp37-*", "cp37-musllinux*"]

[tool.cibuildwheel.linux]
test-extras = "tests"
test-command = "pytest -rs {project}"

[tool.cibuildwheel.macos]
before-all = [
    "brew install libjpeg little-cms2",
    "brew uninstall --force --ignore-dependencies libheif",
    "brew install --formula {project}/libheif/macos/libheif.rb",
    "HOMEBREW_PREFIX=$(brew --prefix)",
    "REPAIR_LIBRARY_PATH=$HOMEBREW_PREFIX/lib",
]
repair-wheel-command = [
  "DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-listdeps {wheel}",
  "DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-wheel -v --require-archs {delocate_archs} -w {dest_dir} {wheel}",
]
test-extras = "tests"
test-command = "pytest -rs {project}"
test-skip = "cp38-macosx_arm64"

[tool.cibuildwheel.windows]
before-build = "pip install delvewheel"
test-extras = "tests"
test-command = "pytest -rs {project}"
